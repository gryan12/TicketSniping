{
  "manifest": {
    "name": "mini-create-react-context",
    "version": "0.3.2",
    "description": "Smaller Polyfill for the proposed React context API",
    "main": "dist/cjs/index.js",
    "module": "dist/esm/index.js",
    "types": "dist/index.d.ts",
    "repository": {
      "type": "git",
      "url": "https://github.com/StringEpsilon/mini-create-react-context"
    },
    "author": {
      "name": "StringEpsilon"
    },
    "license": "MIT",
    "keywords": [
      "react",
      "context",
      "contextTypes",
      "polyfill",
      "ponyfill"
    ],
    "files": [
      "dist/**"
    ],
    "scripts": {
      "test": "jest",
      "build": "rollup -c rollup.config.js",
      "prepublish": "npm run build"
    },
    "dependencies": {
      "gud": "^1.0.0",
      "tiny-warning": "^1.0.2",
      "@babel/runtime": "^7.4.0"
    },
    "peerDependencies": {
      "prop-types": "^15.0.0",
      "react": "^0.14.0 || ^15.0.0 || ^16.0.0"
    },
    "devDependencies": {
      "@babel/cli": "^7.4.3",
      "@babel/core": "^7.4.3",
      "@babel/plugin-proposal-class-properties": "^7.4.0",
      "@babel/preset-env": "^7.4.3",
      "@babel/preset-react": "^7.0.0",
      "@babel/preset-typescript": "^7.3.3",
      "@types/enzyme": "^3.9.1",
      "@types/jest": "^24.0.11",
      "@types/react": "^16.8.13",
      "@wessberg/rollup-plugin-ts": "^1.1.46",
      "babel-jest": "^24.7.1",
      "enzyme": "^3.9.0",
      "enzyme-adapter-react-16": "^1.11.2",
      "enzyme-to-json": "^3.3.5",
      "jest": "^24.7.1",
      "prop-types": "^15.6.0",
      "raf": "^3.4.1",
      "react": "^16.2.0",
      "react-dom": "^16.2.0",
      "rollup": "^1.10.0",
      "rollup-plugin-commonjs": "^9.3.4",
      "rollup-plugin-node-resolve": "^4.2.3",
      "rollup-plugin-uglify": "^6.0.2"
    },
    "jest": {
      "snapshotSerializers": [
        "enzyme-to-json/serializer"
      ]
    },
    "_registry": "npm",
    "_loc": "/code/frontend/cache/v6/npm-mini-create-react-context-0.3.2-79fc598f283dd623da8e088b05db8cddab250189-integrity/node_modules/mini-create-react-context/package.json",
    "readmeFilename": "README.md",
    "readme": "# mini-create-react-context\n\n<p align=\"center\">\n<a href=\"https://packagephobia.now.sh/result?p=mini-create-react-context\">\n\t<img alt=\"npm install size\" src=\"https://packagephobia.now.sh/badge?p=mini-create-react-context\">\n</a>\n<a href=\"https://bundlephobia.com/result?p=mini-create-react-context\">\n\t<img alt=\"npm bundle size\" src=\"https://img.shields.io/bundlephobia/min/mini-create-react-context.svg?style=flat-square\">\n</a>\n<a href=\"https://www.npmjs.com/package/mini-create-react-context\">\n    <img alt=\"npm\" src=\"https://img.shields.io/npm/v/mini-create-react-context.svg?style=flat-square\">\n</a>\n</p>\n\n> (A smaller) Polyfill for the [proposed React context API](https://github.com/reactjs/rfcs/pull/2)\n\n## Install\n\n```sh\nnpm install mini-create-react-context\n```\n\nYou'll need to also have `react` and `prop-types` installed.\n\n## API\n\n```js\nconst Context = createReactContext(defaultValue);\n/*\n\t<Context.Provider value={providedValue}>\n\t\t{children}\n\t</Context.Provider>\n\n\t...\n\n\t<Context.Consumer>\n\t\t{value => children}\n\t</Context.Consumer>\n*/\n```\n\n## Example\n\n```js\n// @flow\nimport React, { type Node } from 'react';\nimport createReactContext, { type Context } from 'mini-create-react-context';\n\ntype Theme = 'light' | 'dark';\n// Pass a default theme to ensure type correctness\nconst ThemeContext: Context<Theme> = createReactContext('light');\n\nclass ThemeToggler extends React.Component<\n  { children: Node },\n  { theme: Theme }\n> {\n  state = { theme: 'light' };\n  render() {\n    return (\n      // Pass the current context value to the Provider's `value` prop.\n      // Changes are detected using strict comparison (Object.is)\n      <ThemeContext.Provider value={this.state.theme}>\n        <button\n          onClick={() => {\n            this.setState(state => ({\n              theme: state.theme === 'light' ? 'dark' : 'light'\n            }));\n          }}\n        >\n          Toggle theme\n        </button>\n        {this.props.children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nclass Title extends React.Component<{ children: Node }> {\n  render() {\n    return (\n      // The Consumer uses a render prop API. Avoids conflicts in the\n      // props namespace.\n      <ThemeContext.Consumer>\n        {theme => (\n          <h1 style={{ color: theme === 'light' ? '#000' : '#fff' }}>\n            {this.props.children}\n          </h1>\n        )}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n```\n\n## Compatibility\n\nThis package only \"ponyfills\" the `React.createContext` API, not other unrelated React 16+ APIs. If you are using a version of React <16, keep in mind that you can only use features available in that version.\n\nFor example, you cannot pass children types aren't valid pre React 16:\n\n```js\n<Context.Provider>\n  <div/>\n  <div/>\n</Context.Provider>\n```\n\nIt will throw `A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.` because `<Context.Provider>` can only receive a single child element. To fix the error just wrap everyting in a single `<div>`:\n\n```js\n<Context.Provider>\n  <div>\n    <div/>\n    <div/>\n  </div>\n</Context.Provider>\n```\n",
    "licenseText": "Copyright (c) 2019-present StringEpsilon <StringEpsilon@gmail.com>\n\nCopyright (c) 2017-2019 James Kyle <me@thejameskyle.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/mini-create-react-context/-/mini-create-react-context-0.3.2.tgz#79fc598f283dd623da8e088b05db8cddab250189",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/mini-create-react-context/-/mini-create-react-context-0.3.2.tgz",
    "hash": "79fc598f283dd623da8e088b05db8cddab250189",
    "integrity": "sha512-2v+OeetEyliMt5VHMXsBhABoJ0/M4RCe7fatd/fBy6SMiKazUSEt3gxxypfnk2SHMkdBYvorHRoQxuGoiwbzAw==",
    "registry": "npm",
    "packageName": "mini-create-react-context",
    "cacheIntegrity": "sha512-2v+OeetEyliMt5VHMXsBhABoJ0/M4RCe7fatd/fBy6SMiKazUSEt3gxxypfnk2SHMkdBYvorHRoQxuGoiwbzAw== sha1-efxZjyg91iPajgiLBduM3aslAYk="
  },
  "registry": "npm",
  "hash": "79fc598f283dd623da8e088b05db8cddab250189"
}